//Codeforces 154B - Colliders

#include <iostream>
#include <vector>

using namespace std;

void findprime (vector<bool>& is_prime) {
    int n=is_prime.size() ;
    is_prime[0]=is_prime[1]=false ;
    for (int i=2;i*i<=n;++i) {
        if (is_prime[i]) {
            for (int j=i*i;j<=n;j+=i) {
                is_prime[j]=false ;
            }
        }
    }
}

void getfactor(int num, vector<int>& factor, vector<bool>& is_prime) {
    for (int i=1;i*i<=num;++i) {
        if (num%i != 0) continue ;
        if (is_prime[i]) factor.push_back(i) ;
        if (is_prime[num/i]) factor.push_back(num/i) ;
    }
}

int main()
{
    int n,m ;
    cin>>n>>m ;
    vector<bool> is_prime(n+1,true) ;
    findprime(is_prime) ;
    vector<int> active(n+1 ,0) ;
    while (m--) {
        char pm ;
        int num ;
        cin>>pm>>num ;
        vector<int> factor ;
        getfactor(num, factor, is_prime) ;
        if (num==1) {
            if (pm=='+') {
                if (active[1]==0) {
                    cout<<"Success\n" ;
                    active[1]=1 ;
                }
                else {
                    cout<<"Already on\n" ;
                }
            }
            if (pm=='-') {
                if (active[1]==0) {
                    cout<<"Already off\n" ;
                }
                else {
                    cout<<"Success\n" ;
                    active[1]=0 ;
                }
            }
            continue ;
        }
        if (pm == '+') {
            int conflict=0 ;
            for (int i=0; i<factor.size();++i) {
                if (active[factor[i]] == num) {
                    cout<<"Already on\n" ;
                    conflict=-1 ;
                    break ;
                }
                if (active[factor[i]] != 0) {
                    conflict=active[factor[i]] ;
                }
                
            }
            if (conflict > 0) {
                cout<<"Conflict with "<<conflict<<'\n' ;
            }
            else if (conflict==0) {
                cout<<"Success\n" ;
                for (int i=0;i<factor.size();++i) {
                    active[factor[i]]=num ;
                }
            }
        } 
        if (pm == '-') {
            bool turnoff=false ;
            for (int i=0;i<factor.size();++i) {
                if (active[factor[i]] == num) {
                    cout<<"Success\n" ;
                    turnoff=true ;
                    break ;
                }
            }
            if (turnoff) {
                for (int i=0;i<factor.size();++i) {
                    active[factor[i]]=0 ;
                }
            }
            else {
                cout<<"Already off\n" ;
            }
            
        }
    }
    return 0;
}
